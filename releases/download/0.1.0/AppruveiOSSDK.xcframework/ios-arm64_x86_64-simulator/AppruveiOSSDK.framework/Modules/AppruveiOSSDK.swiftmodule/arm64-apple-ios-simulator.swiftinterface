// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name AppruveiOSSDK
import AVFoundation
@_exported import AppruveiOSSDK
import CoreImage
import Foundation
import MobileCoreServices
import RxCocoa
import RxSwift
import Swift
import UIKit
import Vision
import WebKit
import _Concurrency
extension CoreGraphics.CGImage {
  @available(iOS 11.0, *)
  public func faceCrop(margin: CoreGraphics.CGFloat = 200, completion: @escaping (AppruveiOSSDK.FaceCropResult) -> Swift.Void)
}
public enum FaceCropResult {
  case success(CoreGraphics.CGImage)
  case notFound
  case failure(Swift.Error)
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class BaseUITableViewController : UIKit.UITableViewController {
  @_Concurrency.MainActor(unsafe) weak public var verificationDelegate: AppruveiOSSDK.AppruveVerificationDelegate?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func didMove(toParent parent: UIKit.UIViewController?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(style: UIKit.UITableView.Style)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_hasMissingDesignatedInitializers public class Appruve {
  public static func initialize(apiKey: Swift.String, isGhanaEnabled: Swift.Bool = true, isNigeriaEnabled: Swift.Bool = true, isKenyaEnabled: Swift.Bool = true, primaryBrandColor: Swift.String = "#079F5E", secondaryBrandColor: Swift.String = "#EAA844", appFontName: Swift.String = "Avenir-Heavy", transactionReference: Swift.String = "", isDocumentCaptureRetryEnabled: Swift.Bool = true, isDocumentCaptureOnly: Swift.Bool = false, isSelfieCaptureOnly: Swift.Bool = false, isGhanaVoterIDEnabled: Swift.Bool = true, isGhanaPassportIDEnabled: Swift.Bool = true, isGhanaDriverLicenseIDEnabled: Swift.Bool = true, isGhanaSSNITIDEnabled: Swift.Bool = true, isNigeriaVoterIDEnabled: Swift.Bool = true, isNigeriaPassportIDEnabled: Swift.Bool = true, isNigeriaDriverLicenseIDEnabled: Swift.Bool = true, isNigeriaNationalIDEnabled: Swift.Bool = true, isKenyaNationalIDEnabled: Swift.Bool = true, isKenyaPassportIDEnabled: Swift.Bool = true, isGhanaNationalIDEnabled: Swift.Bool = true)
  public static func buildVerificationController(delegate: AppruveiOSSDK.AppruveVerificationDelegate) throws -> UIKit.UIViewController
  public static func setGhanaEnabled(enabled: Swift.Bool)
  public static func setNigeriaEnabled(enabled: Swift.Bool)
  public static func setKenyaEnabled(enabled: Swift.Bool)
  public static func setApiKey(apiKey: Swift.String)
  public static func setTransactionReference(ref: Swift.String)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class BaseUIViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) weak public var verificationDelegate: AppruveiOSSDK.AppruveVerificationDelegate?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func didMove(toParent parent: UIKit.UIViewController?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension Foundation.URLRequest {
  public enum HTTPMethod : Swift.String {
    case connect
    case delete
    case get
    case head
    case options
    case patch
    case post
    case put
    case trace
    public init?(rawValue: Swift.String)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class SelfiePhotoViewController : AppruveiOSSDK.BaseUIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
public protocol AppruveVerificationDelegate : AnyObject {
  func onVerificationComplete(result: AppruveiOSSDK.AppruveVerificationResult)
  func onVerificationFailure(error: Swift.String)
  func onFlowChanged(flow: Swift.String)
  func onClose()
}
@_hasMissingDesignatedInitializers public class AppruveVerificationResult {
  public var transactionReference: Swift.String
  public var confidenceSore: Swift.Double
  public var verificationStatus: Swift.String
  public var documentFaceCaptured: Swift.String
  public var selfieFaceCaptured: Swift.String
  public var documentSubmitted: Swift.String
  public var selfiePhotoSubmitted: Swift.String
  public var faceMatchPercent: Swift.Double
  public var idMatchPercent: Swift.Double
  public var documentType: Swift.String
  public var idDetails: [Swift.String : Any]
  @objc deinit
}
extension Foundation.URLRequest.HTTPMethod : Swift.Equatable {}
extension Foundation.URLRequest.HTTPMethod : Swift.Hashable {}
extension Foundation.URLRequest.HTTPMethod : Swift.RawRepresentable {}
